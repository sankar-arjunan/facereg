{"ast":null,"code":"var _jsxFileName = \"/Users/gowrisankara/Desktop/DL-PRO/FaceReg/client2/src/components/CameraCapture.js\",\n  _s = $RefreshSig$();\n// src/components/CameraCapture.js\n\nimport React, { useRef, useState } from 'react';\nimport Webcam from 'react-webcam';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CameraCapture = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const [image, setImage] = useState(null);\n  const [name, setName] = useState('');\n  const [authResult, setAuthResult] = useState(null);\n  const capture = React.useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImage(imageSrc);\n  }, [webcamRef]);\n  const handleRegister = async () => {\n    if (!image || !name) {\n      alert('Please capture an image and provide a name.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', dataURLtoFile(image, 'captured-image.jpg'));\n    formData.append('name', name);\n    try {\n      const response = await axios.post('http://localhost:5001/register_face', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('Face registered successfully!');\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      alert('Error registering face.');\n    }\n  };\n  const handleAuthenticate = async () => {\n    if (!image) {\n      alert('Please capture an image.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', dataURLtoFile(image, 'captured-image.jpg'));\n    try {\n      const response = await axios.post('http://localhost:5001/authenticate_face', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setAuthResult(response.data);\n    } catch (error) {\n      console.error('Error authenticating image:', error);\n      alert('Error authenticating face.');\n    }\n  };\n  const dataURLtoFile = (dataURL, filename) => {\n    const [header, data] = dataURL.split(',');\n    const mime = header.match(/:(.*?);/)[1];\n    const binary = atob(data);\n    const array = [];\n    for (let i = 0; i < binary.length; i++) {\n      array.push(binary.charCodeAt(i));\n    }\n    return new File([new Uint8Array(array)], filename, {\n      type: mime\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Webcam, {\n      audio: false,\n      ref: webcamRef,\n      screenshotFormat: \"image/jpeg\",\n      width: \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: capture,\n      children: \"Capture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"Captured\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRegister,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAuthenticate,\n      children: \"Authenticate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), authResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Authentication Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(authResult, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(CameraCapture, \"MZh1shs+ckOdVTXpYeStrJSzNog=\");\n_c = CameraCapture;\nexport default CameraCapture;\nvar _c;\n$RefreshReg$(_c, \"CameraCapture\");","map":{"version":3,"names":["React","useRef","useState","Webcam","axios","jsxDEV","_jsxDEV","CameraCapture","_s","webcamRef","image","setImage","name","setName","authResult","setAuthResult","capture","useCallback","imageSrc","current","getScreenshot","handleRegister","alert","formData","FormData","append","dataURLtoFile","response","post","headers","error","console","handleAuthenticate","data","dataURL","filename","header","split","mime","match","binary","atob","array","i","length","push","charCodeAt","File","Uint8Array","type","children","audio","ref","screenshotFormat","width","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","placeholder","value","onChange","e","target","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/gowrisankara/Desktop/DL-PRO/FaceReg/client2/src/components/CameraCapture.js"],"sourcesContent":["// src/components/CameraCapture.js\n\nimport React, { useRef, useState } from 'react';\nimport Webcam from 'react-webcam';\nimport axios from 'axios';\n\nconst CameraCapture = () => {\n  const webcamRef = useRef(null);\n  const [image, setImage] = useState(null);\n  const [name, setName] = useState('');\n  const [authResult, setAuthResult] = useState(null);\n\n  const capture = React.useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImage(imageSrc);\n  }, [webcamRef]);\n\n  const handleRegister = async () => {\n    if (!image || !name) {\n      alert('Please capture an image and provide a name.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', dataURLtoFile(image, 'captured-image.jpg'));\n    formData.append('name', name);\n\n    try {\n      const response = await axios.post('http://localhost:5001/register_face', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('Face registered successfully!');\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      alert('Error registering face.');\n    }\n  };\n\n  const handleAuthenticate = async () => {\n    if (!image) {\n      alert('Please capture an image.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', dataURLtoFile(image, 'captured-image.jpg'));\n\n    try {\n      const response = await axios.post('http://localhost:5001/authenticate_face', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setAuthResult(response.data);\n    } catch (error) {\n      console.error('Error authenticating image:', error);\n      alert('Error authenticating face.');\n    }\n  };\n\n  const dataURLtoFile = (dataURL, filename) => {\n    const [header, data] = dataURL.split(',');\n    const mime = header.match(/:(.*?);/)[1];\n    const binary = atob(data);\n    const array = [];\n    for (let i = 0; i < binary.length; i++) {\n      array.push(binary.charCodeAt(i));\n    }\n    return new File([new Uint8Array(array)], filename, { type: mime });\n  };\n\n  return (\n    <div>\n      <Webcam\n        audio={false}\n        ref={webcamRef}\n        screenshotFormat=\"image/jpeg\"\n        width=\"100%\"\n      />\n      <button onClick={capture}>Capture</button>\n      {image && <img src={image} alt=\"Captured\" />}\n      <input\n        type=\"text\"\n        placeholder=\"Enter name\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n      />\n      <button onClick={handleRegister}>Register</button>\n      <button onClick={handleAuthenticate}>Authenticate</button>\n      {authResult && (\n        <div>\n          <h3>Authentication Result:</h3>\n          <pre>{JSON.stringify(authResult, null, 2)}</pre>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CameraCapture;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,SAAS,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMc,OAAO,GAAGhB,KAAK,CAACiB,WAAW,CAAC,MAAM;IACtC,MAAMC,QAAQ,GAAGT,SAAS,CAACU,OAAO,CAACC,aAAa,CAAC,CAAC;IAClDT,QAAQ,CAACO,QAAQ,CAAC;EACpB,CAAC,EAAE,CAACT,SAAS,CAAC,CAAC;EAEf,MAAMY,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAACX,KAAK,IAAI,CAACE,IAAI,EAAE;MACnBU,KAAK,CAAC,6CAA6C,CAAC;MACpD;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEC,aAAa,CAAChB,KAAK,EAAE,oBAAoB,CAAC,CAAC;IACnEa,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEb,IAAI,CAAC;IAE7B,IAAI;MACF,MAAMe,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,IAAI,CAAC,qCAAqC,EAAEL,QAAQ,EAAE;QACjFM,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACFP,KAAK,CAAC,+BAA+B,CAAC;IACxC,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CR,KAAK,CAAC,yBAAyB,CAAC;IAClC;EACF,CAAC;EAED,MAAMU,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI,CAACtB,KAAK,EAAE;MACVY,KAAK,CAAC,0BAA0B,CAAC;MACjC;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEC,aAAa,CAAChB,KAAK,EAAE,oBAAoB,CAAC,CAAC;IAEnE,IAAI;MACF,MAAMiB,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,IAAI,CAAC,yCAAyC,EAAEL,QAAQ,EAAE;QACrFM,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACFd,aAAa,CAACY,QAAQ,CAACM,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDR,KAAK,CAAC,4BAA4B,CAAC;IACrC;EACF,CAAC;EAED,MAAMI,aAAa,GAAGA,CAACQ,OAAO,EAAEC,QAAQ,KAAK;IAC3C,MAAM,CAACC,MAAM,EAAEH,IAAI,CAAC,GAAGC,OAAO,CAACG,KAAK,CAAC,GAAG,CAAC;IACzC,MAAMC,IAAI,GAAGF,MAAM,CAACG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IACvC,MAAMC,MAAM,GAAGC,IAAI,CAACR,IAAI,CAAC;IACzB,MAAMS,KAAK,GAAG,EAAE;IAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAM,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;MACtCD,KAAK,CAACG,IAAI,CAACL,MAAM,CAACM,UAAU,CAACH,CAAC,CAAC,CAAC;IAClC;IACA,OAAO,IAAII,IAAI,CAAC,CAAC,IAAIC,UAAU,CAACN,KAAK,CAAC,CAAC,EAAEP,QAAQ,EAAE;MAAEc,IAAI,EAAEX;IAAK,CAAC,CAAC;EACpE,CAAC;EAED,oBACEhC,OAAA;IAAA4C,QAAA,gBACE5C,OAAA,CAACH,MAAM;MACLgD,KAAK,EAAE,KAAM;MACbC,GAAG,EAAE3C,SAAU;MACf4C,gBAAgB,EAAC,YAAY;MAC7BC,KAAK,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eACFpD,OAAA;MAAQqD,OAAO,EAAE3C,OAAQ;MAAAkC,QAAA,EAAC;IAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACzChD,KAAK,iBAAIJ,OAAA;MAAKsD,GAAG,EAAElD,KAAM;MAACmD,GAAG,EAAC;IAAU;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5CpD,OAAA;MACE2C,IAAI,EAAC,MAAM;MACXa,WAAW,EAAC,YAAY;MACxBC,KAAK,EAAEnD,IAAK;MACZoD,QAAQ,EAAGC,CAAC,IAAKpD,OAAO,CAACoD,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACFpD,OAAA;MAAQqD,OAAO,EAAEtC,cAAe;MAAA6B,QAAA,EAAC;IAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAClDpD,OAAA;MAAQqD,OAAO,EAAE3B,kBAAmB;MAAAkB,QAAA,EAAC;IAAY;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACzD5C,UAAU,iBACTR,OAAA;MAAA4C,QAAA,gBACE5C,OAAA;QAAA4C,QAAA,EAAI;MAAsB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/BpD,OAAA;QAAA4C,QAAA,EAAMiB,IAAI,CAACC,SAAS,CAACtD,UAAU,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClD,EAAA,CA7FID,aAAa;AAAA8D,EAAA,GAAb9D,aAAa;AA+FnB,eAAeA,aAAa;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}